{% from "postgres/map.jinja" import postgres with context -%}
{% set ip_addrs = salt['network.ip_addrs']() -%}
{% set local_ips = [] -%}
{% for ip in ip_addrs -%}
{% if salt['network.is_private'](ip) -%}
{% do local_ips.append(ip) -%}
{% endif -%}
{% endfor -%}
[databases]
{% for base in postgres.database_list -%}
{{ base }} =
{%- endfor %}

{% set default_pool_size = salt['pillar.get']('postgres:pgbouncer:default_pool_size', 20) -%}

[pgbouncer]
logfile = /var/log/postgresql/pgbouncer.log
pidfile = /var/run/postgresql/pgbouncer.pid
listen_addr = {{ local_ips|join(',') }}
listen_port = 6432
unix_socket_dir = /var/run/postgresql
auth_type = md5
auth_file = /etc/pgbouncer/userlist.txt
admin_users = postgres
; rails specific
pool_mode = transaction
server_reset_query =
max_client_conn = 4000
default_pool_size = {{ default_pool_size }}
reserve_pool_size = 0
log_pooler_errors = 1
ignore_startup_parameters = extra_float_digits
